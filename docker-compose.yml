version: '3.8'

services:
  mcp-switch-manager:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mcp-switch-manager
    ports:
      - "8087:8087"
    environment:
      # Server Configuration
      - NODE_ENV=production
      - MCP_PORT=8087
      - LOG_LEVEL=info
      - LOG_TO_FILE=true
      
      # Switch Configuration
      - VIMINS_CORE1_IP=${VIMINS_CORE1_IP:-10.202.28.9}
      - VIMINS_CORE2_IP=${VIMINS_CORE2_IP:-10.202.28.10}
      - VIMINS_USERNAME=${VIMINS_USERNAME:-admin}
      - VIMINS_PASSWORD=${VIMINS_PASSWORD:-admin}
      
      - SODOLA_OFFICE_IP=${SODOLA_OFFICE_IP:-10.202.28.13}
      - SODOLA_PROXMOX_IP=${SODOLA_PROXMOX_IP:-10.202.28.12}
      - SODOLA_BACKUP_IP=${SODOLA_BACKUP_IP:-10.202.28.14}
      - SODOLA_USERNAME=${SODOLA_USERNAME:-admin}
      - SODOLA_PASSWORD=${SODOLA_PASSWORD:-admin}
      
      # Monitoring Configuration
      - HEALTH_CHECK_INTERVAL=300000
      - DIAGNOSTIC_INTERVAL=900000
      
      # Backup Configuration
      - BACKUP_ENABLED=true
      - BACKUP_SCHEDULE=0 2 * * *
      - BACKUP_RETENTION=30
      
      # Feature Flags
      - FEATURE_VLAN_MANAGEMENT=true
      - FEATURE_REAL_TIME_DIAGNOSTICS=true
      - FEATURE_CONFIG_MANAGEMENT=true
      - FEATURE_CROSS_SWITCH_AUTOMATION=true
      - FEATURE_PERFORMANCE_MONITORING=true
      
    volumes:
      # Persistent data storage
      - switch-manager-data:/app/data
      - switch-manager-logs:/app/logs
      - switch-manager-config:/app/config
      
    networks:
      - switch-management
      
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    labels:
      - "com.docker.compose.project=mcp-switch-manager"
      - "com.docker.compose.service=switch-manager"
      - "traefik.enable=true"
      - "traefik.http.routers.switch-manager.rule=Host(`switch-manager.local`)"
      - "traefik.http.services.switch-manager.loadbalancer.server.port=8087"

  # Optional: Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: mcp-switch-manager-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - switch-management
    restart: unless-stopped
    command: redis-server --appendonly yes
    profiles:
      - cache

  # Optional: PostgreSQL for persistent storage
  postgres:
    image: postgres:15-alpine
    container_name: mcp-switch-manager-db
    environment:
      - POSTGRES_DB=switch_manager
      - POSTGRES_USER=switch_manager
      - POSTGRES_PASSWORD=${DB_PASSWORD:-switch_manager_password}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - switch-management
    restart: unless-stopped
    profiles:
      - database

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: mcp-switch-manager-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - switch-management
    restart: unless-stopped
    profiles:
      - monitoring

  # Optional: Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: mcp-switch-manager-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - switch-management
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  switch-manager-data:
    driver: local
  switch-manager-logs:
    driver: local
  switch-manager-config:
    driver: local
  redis-data:
    driver: local
  postgres-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  switch-management:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
